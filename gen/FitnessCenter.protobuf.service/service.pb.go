// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: service.proto

package FitnessCenter_protobuf_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Photo       string `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	CreatedTime string `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime string `protobuf:"bytes,5,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *ServiceObject) Reset() {
	*x = ServiceObject{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceObject) ProtoMessage() {}

func (x *ServiceObject) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceObject.ProtoReflect.Descriptor instead.
func (*ServiceObject) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceObject) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ServiceObject) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *ServiceObject) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *ServiceObject) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

type AbonementIdWithServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementId    string           `protobuf:"bytes,1,opt,name=abonementId,proto3" json:"abonementId,omitempty"`
	ServiceObjects []*ServiceObject `protobuf:"bytes,2,rep,name=serviceObjects,proto3" json:"serviceObjects,omitempty"`
}

func (x *AbonementIdWithServices) Reset() {
	*x = AbonementIdWithServices{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbonementIdWithServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonementIdWithServices) ProtoMessage() {}

func (x *AbonementIdWithServices) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonementIdWithServices.ProtoReflect.Descriptor instead.
func (*AbonementIdWithServices) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *AbonementIdWithServices) GetAbonementId() string {
	if x != nil {
		return x.AbonementId
	}
	return ""
}

func (x *AbonementIdWithServices) GetServiceObjects() []*ServiceObject {
	if x != nil {
		return x.ServiceObjects
	}
	return nil
}

type CoachIdWithServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachId        string           `protobuf:"bytes,1,opt,name=coachId,proto3" json:"coachId,omitempty"`
	ServiceObjects []*ServiceObject `protobuf:"bytes,2,rep,name=serviceObjects,proto3" json:"serviceObjects,omitempty"`
}

func (x *CoachIdWithServices) Reset() {
	*x = CoachIdWithServices{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoachIdWithServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoachIdWithServices) ProtoMessage() {}

func (x *CoachIdWithServices) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoachIdWithServices.ProtoReflect.Descriptor instead.
func (*CoachIdWithServices) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *CoachIdWithServices) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

func (x *CoachIdWithServices) GetServiceObjects() []*ServiceObject {
	if x != nil {
		return x.ServiceObjects
	}
	return nil
}

type ServiceDataForCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ServiceDataForCreate) Reset() {
	*x = ServiceDataForCreate{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceDataForCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDataForCreate) ProtoMessage() {}

func (x *ServiceDataForCreate) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDataForCreate.ProtoReflect.Descriptor instead.
func (*ServiceDataForCreate) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceDataForCreate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ServiceDataForUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ServiceDataForUpdate) Reset() {
	*x = ServiceDataForUpdate{}
	mi := &file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceDataForUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDataForUpdate) ProtoMessage() {}

func (x *ServiceDataForUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDataForUpdate.ProtoReflect.Descriptor instead.
func (*ServiceDataForUpdate) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceDataForUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceDataForUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CoachService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachId   string   `protobuf:"bytes,1,opt,name=coachId,proto3" json:"coachId,omitempty"`
	ServiceId []string `protobuf:"bytes,2,rep,name=serviceId,proto3" json:"serviceId,omitempty"`
}

func (x *CoachService) Reset() {
	*x = CoachService{}
	mi := &file_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoachService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoachService) ProtoMessage() {}

func (x *CoachService) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoachService.ProtoReflect.Descriptor instead.
func (*CoachService) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *CoachService) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

func (x *CoachService) GetServiceId() []string {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

type AbonementService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementId string   `protobuf:"bytes,1,opt,name=abonementId,proto3" json:"abonementId,omitempty"`
	ServiceId   []string `protobuf:"bytes,2,rep,name=serviceId,proto3" json:"serviceId,omitempty"`
}

func (x *AbonementService) Reset() {
	*x = AbonementService{}
	mi := &file_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbonementService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbonementService) ProtoMessage() {}

func (x *AbonementService) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbonementService.ProtoReflect.Descriptor instead.
func (*AbonementService) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *AbonementService) GetAbonementId() string {
	if x != nil {
		return x.AbonementId
	}
	return ""
}

func (x *AbonementService) GetServiceId() []string {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

type CreateServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*CreateServiceRequest_ServiceDataForCreate
	//	*CreateServiceRequest_ServicePhoto
	Payload isCreateServiceRequest_Payload `protobuf_oneof:"payload"`
}

func (x *CreateServiceRequest) Reset() {
	*x = CreateServiceRequest{}
	mi := &file_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceRequest) ProtoMessage() {}

func (x *CreateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (m *CreateServiceRequest) GetPayload() isCreateServiceRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *CreateServiceRequest) GetServiceDataForCreate() *ServiceDataForCreate {
	if x, ok := x.GetPayload().(*CreateServiceRequest_ServiceDataForCreate); ok {
		return x.ServiceDataForCreate
	}
	return nil
}

func (x *CreateServiceRequest) GetServicePhoto() []byte {
	if x, ok := x.GetPayload().(*CreateServiceRequest_ServicePhoto); ok {
		return x.ServicePhoto
	}
	return nil
}

type isCreateServiceRequest_Payload interface {
	isCreateServiceRequest_Payload()
}

type CreateServiceRequest_ServiceDataForCreate struct {
	ServiceDataForCreate *ServiceDataForCreate `protobuf:"bytes,1,opt,name=serviceDataForCreate,proto3,oneof"`
}

type CreateServiceRequest_ServicePhoto struct {
	ServicePhoto []byte `protobuf:"bytes,2,opt,name=servicePhoto,proto3,oneof"`
}

func (*CreateServiceRequest_ServiceDataForCreate) isCreateServiceRequest_Payload() {}

func (*CreateServiceRequest_ServicePhoto) isCreateServiceRequest_Payload() {}

type CreateServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceObject *ServiceObject `protobuf:"bytes,1,opt,name=serviceObject,proto3" json:"serviceObject,omitempty"`
}

func (x *CreateServiceResponse) Reset() {
	*x = CreateServiceResponse{}
	mi := &file_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceResponse) ProtoMessage() {}

func (x *CreateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreateServiceResponse) GetServiceObject() *ServiceObject {
	if x != nil {
		return x.ServiceObject
	}
	return nil
}

type GetServiceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetServiceByIdRequest) Reset() {
	*x = GetServiceByIdRequest{}
	mi := &file_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceByIdRequest) ProtoMessage() {}

func (x *GetServiceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceByIdRequest.ProtoReflect.Descriptor instead.
func (*GetServiceByIdRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetServiceByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetServiceByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceObject *ServiceObject `protobuf:"bytes,1,opt,name=serviceObject,proto3" json:"serviceObject,omitempty"`
}

func (x *GetServiceByIdResponse) Reset() {
	*x = GetServiceByIdResponse{}
	mi := &file_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceByIdResponse) ProtoMessage() {}

func (x *GetServiceByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceByIdResponse.ProtoReflect.Descriptor instead.
func (*GetServiceByIdResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetServiceByIdResponse) GetServiceObject() *ServiceObject {
	if x != nil {
		return x.ServiceObject
	}
	return nil
}

type UpdateServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*UpdateServiceRequest_ServiceDataForUpdate
	//	*UpdateServiceRequest_ServicePhoto
	Payload isUpdateServiceRequest_Payload `protobuf_oneof:"payload"`
}

func (x *UpdateServiceRequest) Reset() {
	*x = UpdateServiceRequest{}
	mi := &file_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceRequest) ProtoMessage() {}

func (x *UpdateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{11}
}

func (m *UpdateServiceRequest) GetPayload() isUpdateServiceRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *UpdateServiceRequest) GetServiceDataForUpdate() *ServiceDataForUpdate {
	if x, ok := x.GetPayload().(*UpdateServiceRequest_ServiceDataForUpdate); ok {
		return x.ServiceDataForUpdate
	}
	return nil
}

func (x *UpdateServiceRequest) GetServicePhoto() []byte {
	if x, ok := x.GetPayload().(*UpdateServiceRequest_ServicePhoto); ok {
		return x.ServicePhoto
	}
	return nil
}

type isUpdateServiceRequest_Payload interface {
	isUpdateServiceRequest_Payload()
}

type UpdateServiceRequest_ServiceDataForUpdate struct {
	ServiceDataForUpdate *ServiceDataForUpdate `protobuf:"bytes,1,opt,name=serviceDataForUpdate,proto3,oneof"`
}

type UpdateServiceRequest_ServicePhoto struct {
	ServicePhoto []byte `protobuf:"bytes,2,opt,name=servicePhoto,proto3,oneof"`
}

func (*UpdateServiceRequest_ServiceDataForUpdate) isUpdateServiceRequest_Payload() {}

func (*UpdateServiceRequest_ServicePhoto) isUpdateServiceRequest_Payload() {}

type UpdateServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceObject *ServiceObject `protobuf:"bytes,1,opt,name=serviceObject,proto3" json:"serviceObject,omitempty"`
}

func (x *UpdateServiceResponse) Reset() {
	*x = UpdateServiceResponse{}
	mi := &file_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceResponse) ProtoMessage() {}

func (x *UpdateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceResponse.ProtoReflect.Descriptor instead.
func (*UpdateServiceResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateServiceResponse) GetServiceObject() *ServiceObject {
	if x != nil {
		return x.ServiceObject
	}
	return nil
}

type DeleteServiceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteServiceByIdRequest) Reset() {
	*x = DeleteServiceByIdRequest{}
	mi := &file_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceByIdRequest) ProtoMessage() {}

func (x *DeleteServiceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceByIdRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteServiceByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteServiceByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceObject *ServiceObject `protobuf:"bytes,1,opt,name=serviceObject,proto3" json:"serviceObject,omitempty"`
}

func (x *DeleteServiceByIdResponse) Reset() {
	*x = DeleteServiceByIdResponse{}
	mi := &file_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceByIdResponse) ProtoMessage() {}

func (x *DeleteServiceByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteServiceByIdResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteServiceByIdResponse) GetServiceObject() *ServiceObject {
	if x != nil {
		return x.ServiceObject
	}
	return nil
}

type GetServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceObject []*ServiceObject `protobuf:"bytes,1,rep,name=serviceObject,proto3" json:"serviceObject,omitempty"`
}

func (x *GetServicesResponse) Reset() {
	*x = GetServicesResponse{}
	mi := &file_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesResponse) ProtoMessage() {}

func (x *GetServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesResponse.ProtoReflect.Descriptor instead.
func (*GetServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetServicesResponse) GetServiceObject() []*ServiceObject {
	if x != nil {
		return x.ServiceObject
	}
	return nil
}

type CreateCoachServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachService *CoachService `protobuf:"bytes,1,opt,name=coachService,proto3" json:"coachService,omitempty"`
}

func (x *CreateCoachServicesRequest) Reset() {
	*x = CreateCoachServicesRequest{}
	mi := &file_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCoachServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoachServicesRequest) ProtoMessage() {}

func (x *CreateCoachServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoachServicesRequest.ProtoReflect.Descriptor instead.
func (*CreateCoachServicesRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCoachServicesRequest) GetCoachService() *CoachService {
	if x != nil {
		return x.CoachService
	}
	return nil
}

type CreateCoachServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachService *CoachService `protobuf:"bytes,1,opt,name=coachService,proto3" json:"coachService,omitempty"`
}

func (x *CreateCoachServicesResponse) Reset() {
	*x = CreateCoachServicesResponse{}
	mi := &file_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCoachServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoachServicesResponse) ProtoMessage() {}

func (x *CreateCoachServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoachServicesResponse.ProtoReflect.Descriptor instead.
func (*CreateCoachServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCoachServicesResponse) GetCoachService() *CoachService {
	if x != nil {
		return x.CoachService
	}
	return nil
}

type CreateAbonementServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementService *AbonementService `protobuf:"bytes,1,opt,name=abonementService,proto3" json:"abonementService,omitempty"`
}

func (x *CreateAbonementServicesRequest) Reset() {
	*x = CreateAbonementServicesRequest{}
	mi := &file_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAbonementServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonementServicesRequest) ProtoMessage() {}

func (x *CreateAbonementServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonementServicesRequest.ProtoReflect.Descriptor instead.
func (*CreateAbonementServicesRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{18}
}

func (x *CreateAbonementServicesRequest) GetAbonementService() *AbonementService {
	if x != nil {
		return x.AbonementService
	}
	return nil
}

type CreateAbonementServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementService *AbonementService `protobuf:"bytes,1,opt,name=abonementService,proto3" json:"abonementService,omitempty"`
}

func (x *CreateAbonementServicesResponse) Reset() {
	*x = CreateAbonementServicesResponse{}
	mi := &file_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAbonementServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAbonementServicesResponse) ProtoMessage() {}

func (x *CreateAbonementServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAbonementServicesResponse.ProtoReflect.Descriptor instead.
func (*CreateAbonementServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateAbonementServicesResponse) GetAbonementService() *AbonementService {
	if x != nil {
		return x.AbonementService
	}
	return nil
}

type UpdateAbonementServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementService *AbonementService `protobuf:"bytes,1,opt,name=abonementService,proto3" json:"abonementService,omitempty"`
}

func (x *UpdateAbonementServicesRequest) Reset() {
	*x = UpdateAbonementServicesRequest{}
	mi := &file_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAbonementServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAbonementServicesRequest) ProtoMessage() {}

func (x *UpdateAbonementServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAbonementServicesRequest.ProtoReflect.Descriptor instead.
func (*UpdateAbonementServicesRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAbonementServicesRequest) GetAbonementService() *AbonementService {
	if x != nil {
		return x.AbonementService
	}
	return nil
}

type UpdateAbonementServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementService *AbonementService `protobuf:"bytes,1,opt,name=abonementService,proto3" json:"abonementService,omitempty"`
}

func (x *UpdateAbonementServicesResponse) Reset() {
	*x = UpdateAbonementServicesResponse{}
	mi := &file_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAbonementServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAbonementServicesResponse) ProtoMessage() {}

func (x *UpdateAbonementServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAbonementServicesResponse.ProtoReflect.Descriptor instead.
func (*UpdateAbonementServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateAbonementServicesResponse) GetAbonementService() *AbonementService {
	if x != nil {
		return x.AbonementService
	}
	return nil
}

type UpdateCoachServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachService *CoachService `protobuf:"bytes,1,opt,name=coachService,proto3" json:"coachService,omitempty"`
}

func (x *UpdateCoachServicesRequest) Reset() {
	*x = UpdateCoachServicesRequest{}
	mi := &file_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCoachServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoachServicesRequest) ProtoMessage() {}

func (x *UpdateCoachServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoachServicesRequest.ProtoReflect.Descriptor instead.
func (*UpdateCoachServicesRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateCoachServicesRequest) GetCoachService() *CoachService {
	if x != nil {
		return x.CoachService
	}
	return nil
}

type UpdateCoachServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachService *CoachService `protobuf:"bytes,1,opt,name=coachService,proto3" json:"coachService,omitempty"`
}

func (x *UpdateCoachServicesResponse) Reset() {
	*x = UpdateCoachServicesResponse{}
	mi := &file_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCoachServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCoachServicesResponse) ProtoMessage() {}

func (x *UpdateCoachServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCoachServicesResponse.ProtoReflect.Descriptor instead.
func (*UpdateCoachServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateCoachServicesResponse) GetCoachService() *CoachService {
	if x != nil {
		return x.CoachService
	}
	return nil
}

type GetAbonementsServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementIds []string `protobuf:"bytes,1,rep,name=abonementIds,proto3" json:"abonementIds,omitempty"`
}

func (x *GetAbonementsServicesRequest) Reset() {
	*x = GetAbonementsServicesRequest{}
	mi := &file_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAbonementsServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAbonementsServicesRequest) ProtoMessage() {}

func (x *GetAbonementsServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAbonementsServicesRequest.ProtoReflect.Descriptor instead.
func (*GetAbonementsServicesRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetAbonementsServicesRequest) GetAbonementIds() []string {
	if x != nil {
		return x.AbonementIds
	}
	return nil
}

type GetAbonementsServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbonementIdsWithServices []*AbonementIdWithServices `protobuf:"bytes,1,rep,name=abonementIdsWithServices,proto3" json:"abonementIdsWithServices,omitempty"`
}

func (x *GetAbonementsServicesResponse) Reset() {
	*x = GetAbonementsServicesResponse{}
	mi := &file_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAbonementsServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAbonementsServicesResponse) ProtoMessage() {}

func (x *GetAbonementsServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAbonementsServicesResponse.ProtoReflect.Descriptor instead.
func (*GetAbonementsServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetAbonementsServicesResponse) GetAbonementIdsWithServices() []*AbonementIdWithServices {
	if x != nil {
		return x.AbonementIdsWithServices
	}
	return nil
}

type GetCoachesServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachIds []string `protobuf:"bytes,1,rep,name=coachIds,proto3" json:"coachIds,omitempty"`
}

func (x *GetCoachesServicesRequest) Reset() {
	*x = GetCoachesServicesRequest{}
	mi := &file_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoachesServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoachesServicesRequest) ProtoMessage() {}

func (x *GetCoachesServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoachesServicesRequest.ProtoReflect.Descriptor instead.
func (*GetCoachesServicesRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetCoachesServicesRequest) GetCoachIds() []string {
	if x != nil {
		return x.CoachIds
	}
	return nil
}

type GetCoachesServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachIdsWithServices []*CoachIdWithServices `protobuf:"bytes,1,rep,name=coachIdsWithServices,proto3" json:"coachIdsWithServices,omitempty"`
}

func (x *GetCoachesServicesResponse) Reset() {
	*x = GetCoachesServicesResponse{}
	mi := &file_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoachesServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoachesServicesResponse) ProtoMessage() {}

func (x *GetCoachesServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoachesServicesResponse.ProtoReflect.Descriptor instead.
func (*GetCoachesServicesResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetCoachesServicesResponse) GetCoachIdsWithServices() []*CoachIdWithServices {
	if x != nil {
		return x.CoachIdsWithServices
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x41, 0x62, 0x6f,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x62, 0x6f, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x7e, 0x0a, 0x13, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0x46, 0x0a, 0x0c, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x10, 0x41, 0x62, 0x6f,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xab, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x64, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x14, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x64, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x68, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x62, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x66, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a,
	0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x76, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x10, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x77, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x61,
	0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x10, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x76, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x10, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x77, 0x0a, 0x1f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10,
	0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x10, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x66, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x63, 0x6f, 0x61,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x42, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x6f, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41,
	0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x18, 0x61, 0x62, 0x6f,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x18, 0x61, 0x62,
	0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x73, 0x22,
	0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x14, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x14, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49,
	0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x32, 0xc6,
	0x0a, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x66,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x66,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x78, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x30, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x66,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x32, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x36, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x66, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x66, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x34, 0x2e,
	0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x62, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x31, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x46, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_service_proto_goTypes = []any{
	(*ServiceObject)(nil),                   // 0: fitness_center.service.ServiceObject
	(*AbonementIdWithServices)(nil),         // 1: fitness_center.service.AbonementIdWithServices
	(*CoachIdWithServices)(nil),             // 2: fitness_center.service.CoachIdWithServices
	(*ServiceDataForCreate)(nil),            // 3: fitness_center.service.ServiceDataForCreate
	(*ServiceDataForUpdate)(nil),            // 4: fitness_center.service.ServiceDataForUpdate
	(*CoachService)(nil),                    // 5: fitness_center.service.CoachService
	(*AbonementService)(nil),                // 6: fitness_center.service.AbonementService
	(*CreateServiceRequest)(nil),            // 7: fitness_center.service.CreateServiceRequest
	(*CreateServiceResponse)(nil),           // 8: fitness_center.service.CreateServiceResponse
	(*GetServiceByIdRequest)(nil),           // 9: fitness_center.service.GetServiceByIdRequest
	(*GetServiceByIdResponse)(nil),          // 10: fitness_center.service.GetServiceByIdResponse
	(*UpdateServiceRequest)(nil),            // 11: fitness_center.service.UpdateServiceRequest
	(*UpdateServiceResponse)(nil),           // 12: fitness_center.service.UpdateServiceResponse
	(*DeleteServiceByIdRequest)(nil),        // 13: fitness_center.service.DeleteServiceByIdRequest
	(*DeleteServiceByIdResponse)(nil),       // 14: fitness_center.service.DeleteServiceByIdResponse
	(*GetServicesResponse)(nil),             // 15: fitness_center.service.GetServicesResponse
	(*CreateCoachServicesRequest)(nil),      // 16: fitness_center.service.CreateCoachServicesRequest
	(*CreateCoachServicesResponse)(nil),     // 17: fitness_center.service.CreateCoachServicesResponse
	(*CreateAbonementServicesRequest)(nil),  // 18: fitness_center.service.CreateAbonementServicesRequest
	(*CreateAbonementServicesResponse)(nil), // 19: fitness_center.service.CreateAbonementServicesResponse
	(*UpdateAbonementServicesRequest)(nil),  // 20: fitness_center.service.UpdateAbonementServicesRequest
	(*UpdateAbonementServicesResponse)(nil), // 21: fitness_center.service.UpdateAbonementServicesResponse
	(*UpdateCoachServicesRequest)(nil),      // 22: fitness_center.service.UpdateCoachServicesRequest
	(*UpdateCoachServicesResponse)(nil),     // 23: fitness_center.service.UpdateCoachServicesResponse
	(*GetAbonementsServicesRequest)(nil),    // 24: fitness_center.service.GetAbonementsServicesRequest
	(*GetAbonementsServicesResponse)(nil),   // 25: fitness_center.service.GetAbonementsServicesResponse
	(*GetCoachesServicesRequest)(nil),       // 26: fitness_center.service.GetCoachesServicesRequest
	(*GetCoachesServicesResponse)(nil),      // 27: fitness_center.service.GetCoachesServicesResponse
	(*emptypb.Empty)(nil),                   // 28: google.protobuf.Empty
}
var file_service_proto_depIdxs = []int32{
	0,  // 0: fitness_center.service.AbonementIdWithServices.serviceObjects:type_name -> fitness_center.service.ServiceObject
	0,  // 1: fitness_center.service.CoachIdWithServices.serviceObjects:type_name -> fitness_center.service.ServiceObject
	3,  // 2: fitness_center.service.CreateServiceRequest.serviceDataForCreate:type_name -> fitness_center.service.ServiceDataForCreate
	0,  // 3: fitness_center.service.CreateServiceResponse.serviceObject:type_name -> fitness_center.service.ServiceObject
	0,  // 4: fitness_center.service.GetServiceByIdResponse.serviceObject:type_name -> fitness_center.service.ServiceObject
	4,  // 5: fitness_center.service.UpdateServiceRequest.serviceDataForUpdate:type_name -> fitness_center.service.ServiceDataForUpdate
	0,  // 6: fitness_center.service.UpdateServiceResponse.serviceObject:type_name -> fitness_center.service.ServiceObject
	0,  // 7: fitness_center.service.DeleteServiceByIdResponse.serviceObject:type_name -> fitness_center.service.ServiceObject
	0,  // 8: fitness_center.service.GetServicesResponse.serviceObject:type_name -> fitness_center.service.ServiceObject
	5,  // 9: fitness_center.service.CreateCoachServicesRequest.coachService:type_name -> fitness_center.service.CoachService
	5,  // 10: fitness_center.service.CreateCoachServicesResponse.coachService:type_name -> fitness_center.service.CoachService
	6,  // 11: fitness_center.service.CreateAbonementServicesRequest.abonementService:type_name -> fitness_center.service.AbonementService
	6,  // 12: fitness_center.service.CreateAbonementServicesResponse.abonementService:type_name -> fitness_center.service.AbonementService
	6,  // 13: fitness_center.service.UpdateAbonementServicesRequest.abonementService:type_name -> fitness_center.service.AbonementService
	6,  // 14: fitness_center.service.UpdateAbonementServicesResponse.abonementService:type_name -> fitness_center.service.AbonementService
	5,  // 15: fitness_center.service.UpdateCoachServicesRequest.coachService:type_name -> fitness_center.service.CoachService
	5,  // 16: fitness_center.service.UpdateCoachServicesResponse.coachService:type_name -> fitness_center.service.CoachService
	1,  // 17: fitness_center.service.GetAbonementsServicesResponse.abonementIdsWithServices:type_name -> fitness_center.service.AbonementIdWithServices
	2,  // 18: fitness_center.service.GetCoachesServicesResponse.coachIdsWithServices:type_name -> fitness_center.service.CoachIdWithServices
	7,  // 19: fitness_center.service.Service.CreateService:input_type -> fitness_center.service.CreateServiceRequest
	9,  // 20: fitness_center.service.Service.GetServiceById:input_type -> fitness_center.service.GetServiceByIdRequest
	11, // 21: fitness_center.service.Service.UpdateService:input_type -> fitness_center.service.UpdateServiceRequest
	13, // 22: fitness_center.service.Service.DeleteServiceById:input_type -> fitness_center.service.DeleteServiceByIdRequest
	28, // 23: fitness_center.service.Service.GetServices:input_type -> google.protobuf.Empty
	16, // 24: fitness_center.service.Service.CreateCoachServices:input_type -> fitness_center.service.CreateCoachServicesRequest
	18, // 25: fitness_center.service.Service.CreateAbonementServices:input_type -> fitness_center.service.CreateAbonementServicesRequest
	20, // 26: fitness_center.service.Service.UpdateAbonementServices:input_type -> fitness_center.service.UpdateAbonementServicesRequest
	22, // 27: fitness_center.service.Service.UpdateCoachServices:input_type -> fitness_center.service.UpdateCoachServicesRequest
	24, // 28: fitness_center.service.Service.GetAbonementsServices:input_type -> fitness_center.service.GetAbonementsServicesRequest
	26, // 29: fitness_center.service.Service.GetCoachesServices:input_type -> fitness_center.service.GetCoachesServicesRequest
	8,  // 30: fitness_center.service.Service.CreateService:output_type -> fitness_center.service.CreateServiceResponse
	10, // 31: fitness_center.service.Service.GetServiceById:output_type -> fitness_center.service.GetServiceByIdResponse
	12, // 32: fitness_center.service.Service.UpdateService:output_type -> fitness_center.service.UpdateServiceResponse
	14, // 33: fitness_center.service.Service.DeleteServiceById:output_type -> fitness_center.service.DeleteServiceByIdResponse
	15, // 34: fitness_center.service.Service.GetServices:output_type -> fitness_center.service.GetServicesResponse
	17, // 35: fitness_center.service.Service.CreateCoachServices:output_type -> fitness_center.service.CreateCoachServicesResponse
	19, // 36: fitness_center.service.Service.CreateAbonementServices:output_type -> fitness_center.service.CreateAbonementServicesResponse
	21, // 37: fitness_center.service.Service.UpdateAbonementServices:output_type -> fitness_center.service.UpdateAbonementServicesResponse
	23, // 38: fitness_center.service.Service.UpdateCoachServices:output_type -> fitness_center.service.UpdateCoachServicesResponse
	25, // 39: fitness_center.service.Service.GetAbonementsServices:output_type -> fitness_center.service.GetAbonementsServicesResponse
	27, // 40: fitness_center.service.Service.GetCoachesServices:output_type -> fitness_center.service.GetCoachesServicesResponse
	30, // [30:41] is the sub-list for method output_type
	19, // [19:30] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_service_proto_msgTypes[7].OneofWrappers = []any{
		(*CreateServiceRequest_ServiceDataForCreate)(nil),
		(*CreateServiceRequest_ServicePhoto)(nil),
	}
	file_service_proto_msgTypes[11].OneofWrappers = []any{
		(*UpdateServiceRequest_ServiceDataForUpdate)(nil),
		(*UpdateServiceRequest_ServicePhoto)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
