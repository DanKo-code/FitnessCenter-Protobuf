// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: review.proto

package FitnessCenter_protobuf_review

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReviewObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Body        string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	CreatedTime string `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime string `protobuf:"bytes,5,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *ReviewObject) Reset() {
	*x = ReviewObject{}
	mi := &file_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewObject) ProtoMessage() {}

func (x *ReviewObject) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewObject.ProtoReflect.Descriptor instead.
func (*ReviewObject) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{0}
}

func (x *ReviewObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReviewObject) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReviewObject) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ReviewObject) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *ReviewObject) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

type CoachIdWithReviewObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachId       string          `protobuf:"bytes,1,opt,name=coach_id,json=coachId,proto3" json:"coach_id,omitempty"`
	ReviewObjects []*ReviewObject `protobuf:"bytes,2,rep,name=reviewObjects,proto3" json:"reviewObjects,omitempty"`
}

func (x *CoachIdWithReviewObject) Reset() {
	*x = CoachIdWithReviewObject{}
	mi := &file_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoachIdWithReviewObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoachIdWithReviewObject) ProtoMessage() {}

func (x *CoachIdWithReviewObject) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoachIdWithReviewObject.ProtoReflect.Descriptor instead.
func (*CoachIdWithReviewObject) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{1}
}

func (x *CoachIdWithReviewObject) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

func (x *CoachIdWithReviewObject) GetReviewObjects() []*ReviewObject {
	if x != nil {
		return x.ReviewObjects
	}
	return nil
}

type CoachReviewDataForCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Body    string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	CoachId string `protobuf:"bytes,3,opt,name=coach_id,json=coachId,proto3" json:"coach_id,omitempty"`
}

func (x *CoachReviewDataForCreate) Reset() {
	*x = CoachReviewDataForCreate{}
	mi := &file_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoachReviewDataForCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoachReviewDataForCreate) ProtoMessage() {}

func (x *CoachReviewDataForCreate) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoachReviewDataForCreate.ProtoReflect.Descriptor instead.
func (*CoachReviewDataForCreate) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{2}
}

func (x *CoachReviewDataForCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CoachReviewDataForCreate) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CoachReviewDataForCreate) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

type ReviewDataForUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ReviewDataForUpdate) Reset() {
	*x = ReviewDataForUpdate{}
	mi := &file_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewDataForUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewDataForUpdate) ProtoMessage() {}

func (x *ReviewDataForUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewDataForUpdate.ProtoReflect.Descriptor instead.
func (*ReviewDataForUpdate) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{3}
}

func (x *ReviewDataForUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReviewDataForUpdate) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type CreateCoachReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewDataForCreate *CoachReviewDataForCreate `protobuf:"bytes,1,opt,name=reviewDataForCreate,proto3" json:"reviewDataForCreate,omitempty"`
}

func (x *CreateCoachReviewRequest) Reset() {
	*x = CreateCoachReviewRequest{}
	mi := &file_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCoachReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoachReviewRequest) ProtoMessage() {}

func (x *CreateCoachReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoachReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateCoachReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCoachReviewRequest) GetReviewDataForCreate() *CoachReviewDataForCreate {
	if x != nil {
		return x.ReviewDataForCreate
	}
	return nil
}

type CreateCoachReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewObject *ReviewObject `protobuf:"bytes,1,opt,name=reviewObject,proto3" json:"reviewObject,omitempty"`
}

func (x *CreateCoachReviewResponse) Reset() {
	*x = CreateCoachReviewResponse{}
	mi := &file_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCoachReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoachReviewResponse) ProtoMessage() {}

func (x *CreateCoachReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoachReviewResponse.ProtoReflect.Descriptor instead.
func (*CreateCoachReviewResponse) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCoachReviewResponse) GetReviewObject() *ReviewObject {
	if x != nil {
		return x.ReviewObject
	}
	return nil
}

type GetReviewByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetReviewByIdRequest) Reset() {
	*x = GetReviewByIdRequest{}
	mi := &file_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewByIdRequest) ProtoMessage() {}

func (x *GetReviewByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewByIdRequest.ProtoReflect.Descriptor instead.
func (*GetReviewByIdRequest) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{6}
}

func (x *GetReviewByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetReviewByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewObject *ReviewObject `protobuf:"bytes,1,opt,name=reviewObject,proto3" json:"reviewObject,omitempty"`
}

func (x *GetReviewByIdResponse) Reset() {
	*x = GetReviewByIdResponse{}
	mi := &file_review_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReviewByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewByIdResponse) ProtoMessage() {}

func (x *GetReviewByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewByIdResponse.ProtoReflect.Descriptor instead.
func (*GetReviewByIdResponse) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{7}
}

func (x *GetReviewByIdResponse) GetReviewObject() *ReviewObject {
	if x != nil {
		return x.ReviewObject
	}
	return nil
}

type UpdateReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewDataForUpdate *ReviewDataForUpdate `protobuf:"bytes,1,opt,name=reviewDataForUpdate,proto3" json:"reviewDataForUpdate,omitempty"`
}

func (x *UpdateReviewRequest) Reset() {
	*x = UpdateReviewRequest{}
	mi := &file_review_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRequest) ProtoMessage() {}

func (x *UpdateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateReviewRequest) GetReviewDataForUpdate() *ReviewDataForUpdate {
	if x != nil {
		return x.ReviewDataForUpdate
	}
	return nil
}

type UpdateReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewObject *ReviewObject `protobuf:"bytes,1,opt,name=reviewObject,proto3" json:"reviewObject,omitempty"`
}

func (x *UpdateReviewResponse) Reset() {
	*x = UpdateReviewResponse{}
	mi := &file_review_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewResponse) ProtoMessage() {}

func (x *UpdateReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateReviewResponse) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReviewResponse) GetReviewObject() *ReviewObject {
	if x != nil {
		return x.ReviewObject
	}
	return nil
}

type DeleteReviewByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReviewByIdRequest) Reset() {
	*x = DeleteReviewByIdRequest{}
	mi := &file_review_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReviewByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReviewByIdRequest) ProtoMessage() {}

func (x *DeleteReviewByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReviewByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteReviewByIdRequest) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteReviewByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteReviewByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewObject *ReviewObject `protobuf:"bytes,1,opt,name=reviewObject,proto3" json:"reviewObject,omitempty"`
}

func (x *DeleteReviewByIdResponse) Reset() {
	*x = DeleteReviewByIdResponse{}
	mi := &file_review_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReviewByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReviewByIdResponse) ProtoMessage() {}

func (x *DeleteReviewByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReviewByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteReviewByIdResponse) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteReviewByIdResponse) GetReviewObject() *ReviewObject {
	if x != nil {
		return x.ReviewObject
	}
	return nil
}

type GetCoachReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachId string `protobuf:"bytes,1,opt,name=coach_id,json=coachId,proto3" json:"coach_id,omitempty"`
}

func (x *GetCoachReviewsRequest) Reset() {
	*x = GetCoachReviewsRequest{}
	mi := &file_review_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoachReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoachReviewsRequest) ProtoMessage() {}

func (x *GetCoachReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoachReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetCoachReviewsRequest) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{12}
}

func (x *GetCoachReviewsRequest) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

type GetCoachReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewObjects []*ReviewObject `protobuf:"bytes,1,rep,name=reviewObjects,proto3" json:"reviewObjects,omitempty"`
}

func (x *GetCoachReviewsResponse) Reset() {
	*x = GetCoachReviewsResponse{}
	mi := &file_review_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoachReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoachReviewsResponse) ProtoMessage() {}

func (x *GetCoachReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoachReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetCoachReviewsResponse) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{13}
}

func (x *GetCoachReviewsResponse) GetReviewObjects() []*ReviewObject {
	if x != nil {
		return x.ReviewObjects
	}
	return nil
}

type GetCoachesReviewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachesIds []string `protobuf:"bytes,1,rep,name=coaches_ids,json=coachesIds,proto3" json:"coaches_ids,omitempty"`
}

func (x *GetCoachesReviewsRequest) Reset() {
	*x = GetCoachesReviewsRequest{}
	mi := &file_review_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoachesReviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoachesReviewsRequest) ProtoMessage() {}

func (x *GetCoachesReviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoachesReviewsRequest.ProtoReflect.Descriptor instead.
func (*GetCoachesReviewsRequest) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{14}
}

func (x *GetCoachesReviewsRequest) GetCoachesIds() []string {
	if x != nil {
		return x.CoachesIds
	}
	return nil
}

type GetCoachesReviewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoachIdWithReviewObject []*CoachIdWithReviewObject `protobuf:"bytes,1,rep,name=coachIdWithReviewObject,proto3" json:"coachIdWithReviewObject,omitempty"`
}

func (x *GetCoachesReviewsResponse) Reset() {
	*x = GetCoachesReviewsResponse{}
	mi := &file_review_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCoachesReviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoachesReviewsResponse) ProtoMessage() {}

func (x *GetCoachesReviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoachesReviewsResponse.ProtoReflect.Descriptor instead.
func (*GetCoachesReviewsResponse) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{15}
}

func (x *GetCoachesReviewsResponse) GetCoachIdWithReviewObject() []*CoachIdWithReviewObject {
	if x != nil {
		return x.CoachIdWithReviewObject
	}
	return nil
}

var File_review_proto protoreflect.FileDescriptor

var file_review_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x17, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x49, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x18, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x22, 0x39,
	0x0a, 0x13, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x7d, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x13, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x13, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x26,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x73, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5c, 0x0a, 0x13, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x13, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5f, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x29,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x33,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x65, 0x73, 0x49, 0x64, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x17, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x49, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x17, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 0xb4,
	0x05, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x76, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2f,
	0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x61,
	0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x2b, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2a, 0x2e,
	0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x66, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x66, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x2d,
	0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x12, 0x2f, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x46, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_review_proto_rawDescOnce sync.Once
	file_review_proto_rawDescData = file_review_proto_rawDesc
)

func file_review_proto_rawDescGZIP() []byte {
	file_review_proto_rawDescOnce.Do(func() {
		file_review_proto_rawDescData = protoimpl.X.CompressGZIP(file_review_proto_rawDescData)
	})
	return file_review_proto_rawDescData
}

var file_review_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_review_proto_goTypes = []any{
	(*ReviewObject)(nil),              // 0: fitness_center.review.ReviewObject
	(*CoachIdWithReviewObject)(nil),   // 1: fitness_center.review.CoachIdWithReviewObject
	(*CoachReviewDataForCreate)(nil),  // 2: fitness_center.review.CoachReviewDataForCreate
	(*ReviewDataForUpdate)(nil),       // 3: fitness_center.review.ReviewDataForUpdate
	(*CreateCoachReviewRequest)(nil),  // 4: fitness_center.review.CreateCoachReviewRequest
	(*CreateCoachReviewResponse)(nil), // 5: fitness_center.review.CreateCoachReviewResponse
	(*GetReviewByIdRequest)(nil),      // 6: fitness_center.review.GetReviewByIdRequest
	(*GetReviewByIdResponse)(nil),     // 7: fitness_center.review.GetReviewByIdResponse
	(*UpdateReviewRequest)(nil),       // 8: fitness_center.review.UpdateReviewRequest
	(*UpdateReviewResponse)(nil),      // 9: fitness_center.review.UpdateReviewResponse
	(*DeleteReviewByIdRequest)(nil),   // 10: fitness_center.review.DeleteReviewByIdRequest
	(*DeleteReviewByIdResponse)(nil),  // 11: fitness_center.review.DeleteReviewByIdResponse
	(*GetCoachReviewsRequest)(nil),    // 12: fitness_center.review.GetCoachReviewsRequest
	(*GetCoachReviewsResponse)(nil),   // 13: fitness_center.review.GetCoachReviewsResponse
	(*GetCoachesReviewsRequest)(nil),  // 14: fitness_center.review.GetCoachesReviewsRequest
	(*GetCoachesReviewsResponse)(nil), // 15: fitness_center.review.GetCoachesReviewsResponse
}
var file_review_proto_depIdxs = []int32{
	0,  // 0: fitness_center.review.CoachIdWithReviewObject.reviewObjects:type_name -> fitness_center.review.ReviewObject
	2,  // 1: fitness_center.review.CreateCoachReviewRequest.reviewDataForCreate:type_name -> fitness_center.review.CoachReviewDataForCreate
	0,  // 2: fitness_center.review.CreateCoachReviewResponse.reviewObject:type_name -> fitness_center.review.ReviewObject
	0,  // 3: fitness_center.review.GetReviewByIdResponse.reviewObject:type_name -> fitness_center.review.ReviewObject
	3,  // 4: fitness_center.review.UpdateReviewRequest.reviewDataForUpdate:type_name -> fitness_center.review.ReviewDataForUpdate
	0,  // 5: fitness_center.review.UpdateReviewResponse.reviewObject:type_name -> fitness_center.review.ReviewObject
	0,  // 6: fitness_center.review.DeleteReviewByIdResponse.reviewObject:type_name -> fitness_center.review.ReviewObject
	0,  // 7: fitness_center.review.GetCoachReviewsResponse.reviewObjects:type_name -> fitness_center.review.ReviewObject
	1,  // 8: fitness_center.review.GetCoachesReviewsResponse.coachIdWithReviewObject:type_name -> fitness_center.review.CoachIdWithReviewObject
	4,  // 9: fitness_center.review.Review.CreateCoachReview:input_type -> fitness_center.review.CreateCoachReviewRequest
	6,  // 10: fitness_center.review.Review.GetReviewById:input_type -> fitness_center.review.GetReviewByIdRequest
	8,  // 11: fitness_center.review.Review.UpdateReview:input_type -> fitness_center.review.UpdateReviewRequest
	10, // 12: fitness_center.review.Review.DeleteReviewById:input_type -> fitness_center.review.DeleteReviewByIdRequest
	12, // 13: fitness_center.review.Review.GetCoachReviews:input_type -> fitness_center.review.GetCoachReviewsRequest
	14, // 14: fitness_center.review.Review.GetCoachesReviews:input_type -> fitness_center.review.GetCoachesReviewsRequest
	5,  // 15: fitness_center.review.Review.CreateCoachReview:output_type -> fitness_center.review.CreateCoachReviewResponse
	7,  // 16: fitness_center.review.Review.GetReviewById:output_type -> fitness_center.review.GetReviewByIdResponse
	9,  // 17: fitness_center.review.Review.UpdateReview:output_type -> fitness_center.review.UpdateReviewResponse
	11, // 18: fitness_center.review.Review.DeleteReviewById:output_type -> fitness_center.review.DeleteReviewByIdResponse
	13, // 19: fitness_center.review.Review.GetCoachReviews:output_type -> fitness_center.review.GetCoachReviewsResponse
	15, // 20: fitness_center.review.Review.GetCoachesReviews:output_type -> fitness_center.review.GetCoachesReviewsResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_review_proto_init() }
func file_review_proto_init() {
	if File_review_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_review_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_proto_goTypes,
		DependencyIndexes: file_review_proto_depIdxs,
		MessageInfos:      file_review_proto_msgTypes,
	}.Build()
	File_review_proto = out.File
	file_review_proto_rawDesc = nil
	file_review_proto_goTypes = nil
	file_review_proto_depIdxs = nil
}
